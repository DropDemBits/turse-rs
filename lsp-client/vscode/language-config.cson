comments:
    # symbol used for single line comment.
    lineComment: "%"
    # symbols used for start and end a block comment.
    blockComment: [
        "/*", "*/"
    ]

# symbols used as brackets
brackets: [
    ["(", ")"]
]

# symbols that are auto closed when typing
autoClosingPairs: [
    [ "(", ")" ]
    { open: '"', close: '"', notIn: [ "string" ] }
    { open: "'", close: "'", notIn: [ "string", "comment" ] }
    { open: "/*", close: "*/", notIn: [ "string" ] }
]

# symbols that can be used to surround a selection
surroundingPairs: [
    [ "(", ")" ]
    [ '"', '"' ]
    [ "'", "'" ]
]

###
Adapted from:
- https://github.com/Alhadis/language-turing/blob/v1.0.2/settings/editor.cson#L4-L12
- https://github.com/microsoft/vscode/blob/169/extensions/lua/language-configuration.json#L26-L27

Changes:
- Add short-hand aliases for function declarations (fcn & proc)
- Add "turse"-only keywords (`elif`)
### 
indentationRules:
    increaseIndentPattern: ///
        # General case
        (^
        ( # any amount of
            (?!%) # negative lookahead: inline comment start
            . # anything
        )*
        ( # followed by
            \b(
                # Item declarations
                class|module|monitor|body|
                # Block statements
                elsif|elseif|elif|else|begin|
                # Block statements with structured ends
                (
                    (?<!(end\s+)) # no leading `end`
                    (case|if|for|loop)
                )|
                # End of (if/elsif/elif)
                then
            )\b
            ( # followed by
                ( # any amount of
                    (?!\b( # negative lookahead:
                        # Structured end
                        end|
                        # Compound end
                        endcase|endif|endfor|endloop
                    )\b)
                    . # anything
                )*
            )
        )
        $)
        # Special case: Subprograms (since they can be in inline type position)
        |(^
        ( # any amount of
            (?!%) # negative lookahead: inline comment start
            \s # whitespace
        )*
        ( # followed by
            \b(
                # Subprograms with inline variations
                (
                    (?<!(forward|deferred)\s+)
                    (process|function|fcn|procedure|proc)
                )
            )\b
            ( # followed by
                ( # any amount of
                    (?!\b( # negative lookahead:
                        # Structured end
                        end|
                        # Compound end
                        endcase|endif|endfor|endloop
                    )\b)
                    . # anything
                )*
            )
        )
        $)
    ///
    decreaseIndentPattern: ///
        ^
        \s* # leading ws
        (
            (\b(
                # Structured end
                end|
                # Compound end
                endcase|endif|endfor|endloop|
                # Chained if
                elsif|elseif|elif|else
            )\b)
        )
    ///
