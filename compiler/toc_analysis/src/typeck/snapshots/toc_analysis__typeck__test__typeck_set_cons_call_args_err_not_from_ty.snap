---
source: compiler/toc_analysis/src/typeck/test.rs
expression: "type s : set of boolean\nvar k : s\nk := k()\n"
---
"s"@(FileId(1), 5..6) [Type]: set[DefId(LibraryId(0), LocalDefId(1))] of boolean
"s"@(FileId(1), 9..23) [Set]: <error>
"k"@(FileId(1), 28..29) [ConstVar(Var, No)]: set[DefId(LibraryId(0), LocalDefId(1))] of boolean
"<root>"@(dummy) [Module(No)]: <error>

error in file FileId(1) at 39..40: cannot call or subscript `k`
| note in file FileId(1) for 39..40: this is of type `set s (of boolean)`
| info: sets can only be constructed from their type names
