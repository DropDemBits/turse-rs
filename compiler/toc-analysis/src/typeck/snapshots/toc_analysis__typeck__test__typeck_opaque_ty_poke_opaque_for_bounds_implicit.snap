---
source: compiler/toc-analysis/src/typeck/test.rs
expression: "module m\n    export opaque t\n    type t : 1 .. 2\n    for _ : t end for\nend m\n\nfor _ : m.t end for\n"
---
"m"@(FileId(1), 7..8) [Module(No)]: <error>
"t"@(FileId(1), 38..39) [Type]: opaque[DefId(PackageId(0), LocalDefId(1))] type to range of `int` (Unevaluated(PackageId(0), BodyId(0)) .. Expr(Unevaluated(PackageId(0), BodyId(1)), No))
"_"@(FileId(1), 57..58) [ConstVar(Const, No)]: alias[DefId(PackageId(0), LocalDefId(1))] of range of `int` (Unevaluated(PackageId(0), BodyId(0)) .. Expr(Unevaluated(PackageId(0), BodyId(1)), No))
"_"@(FileId(1), 82..83) [ConstVar(Const, No)]: opaque[DefId(PackageId(0), LocalDefId(1))] type to range of `int` (Unevaluated(PackageId(0), BodyId(0)) .. Expr(Unevaluated(PackageId(0), BodyId(1)), No))
"t"@(FileId(1), 27..28) [Export]: opaque[DefId(PackageId(0), LocalDefId(1))] type to range of `int` (Unevaluated(PackageId(0), BodyId(0)) .. Expr(Unevaluated(PackageId(0), BodyId(1)), No))
"<root>"@(dummy) [Module(No)]: <error>

error at (FileId(1), 86..89): mismatched types
| note for (FileId(1), 86..89): this is of type `t (an opaque type)`
| error for (FileId(1), 86..89): `t (an opaque type)` is not an index type
| info: range bound type must be an index type (an integer, `boolean`, `char`, enumerated type, or a range)
