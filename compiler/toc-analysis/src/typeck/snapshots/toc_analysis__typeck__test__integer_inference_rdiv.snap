---
source: compiler/toc-analysis/src/typeck/test.rs
expression: "\n    % Inferred integer types should pass\n    % Decl should be a concrete type\n    var a := 1 / 1\n    % Types of operands should make the type concrete\n    var r : real\n    var i : int\n    var n : nat\n    var _r0 := 1 / r\n    var _r1 := r / 1\n    var _i0 := 1 / i\n    var _i1 := i / 1\n    var _n0 := 1 / n\n    var _n1 := n / 1\n"
---
"a"@"src/main.t:87..88" [ConstVar(Var, No)]: real
"r"@"src/main.t:160..161" [ConstVar(Var, No)]: real
"i"@"src/main.t:177..178" [ConstVar(Var, No)]: int
"n"@"src/main.t:193..194" [ConstVar(Var, No)]: nat
"_r0"@"src/main.t:209..212" [ConstVar(Var, No)]: real
"_r1"@"src/main.t:230..233" [ConstVar(Var, No)]: real
"_i0"@"src/main.t:251..254" [ConstVar(Var, No)]: real
"_i1"@"src/main.t:272..275" [ConstVar(Var, No)]: real
"_n0"@"src/main.t:293..296" [ConstVar(Var, No)]: real
"_n1"@"src/main.t:314..317" [ConstVar(Var, No)]: real
"<root>"@"<unknown>:0..0" [Module(No)]: <error>
