---
source: compiler/toc_analysis/src/typeck/test.rs
expression: "\n    % Inferred integer types should pass\n    % Decl should be a concrete type\n    var a := 1 mod 1\n    % Types of operands should make the type concrete\n    var r : real\n    var i : int\n    var n : nat\n    var _r0 := 1 mod r\n    var _r1 := r mod 1\n    var _i0 := 1 mod i\n    var _i1 := i mod 1\n    var _n0 := 1 mod n\n    var _n1 := n mod 1\n"
---
"a"@(FileId(1), 87..88) [ConstVar(Var, No)]: int
"r"@(FileId(1), 162..163) [ConstVar(Var, No)]: real
"i"@(FileId(1), 179..180) [ConstVar(Var, No)]: int
"n"@(FileId(1), 195..196) [ConstVar(Var, No)]: nat
"_r0"@(FileId(1), 211..214) [ConstVar(Var, No)]: real
"_r1"@(FileId(1), 234..237) [ConstVar(Var, No)]: real
"_i0"@(FileId(1), 257..260) [ConstVar(Var, No)]: int
"_i1"@(FileId(1), 280..283) [ConstVar(Var, No)]: int
"_n0"@(FileId(1), 303..306) [ConstVar(Var, No)]: nat
"_n1"@(FileId(1), 326..329) [ConstVar(Var, No)]: nat
"<root>"@(dummy) [Module(No)]: <error>

