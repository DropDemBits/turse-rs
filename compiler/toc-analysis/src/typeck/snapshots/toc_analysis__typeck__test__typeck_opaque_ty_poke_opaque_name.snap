---
source: compiler/toc_analysis/src/typeck/test.rs
expression: "module m\n    export opaque t, a, ~.* b\n    type t : int\n\n    var a : t\n    var b := a\n    a := 2\nend m\n\n% It's fine if `b` leaks the hidden type\nvar c : int := b\n"
---
"m"@(FileId(1), 7..8) [Module(No)]: <error>
"t"@(FileId(1), 48..49) [Type]: opaque[DefId(PackageId(0), LocalDefId(1))] type to int
"a"@(FileId(1), 65..66) [ConstVar(Var, No)]: opaque[DefId(PackageId(0), LocalDefId(1))] type to int
"b"@(FileId(1), 79..80) [ConstVar(Var, No)]: alias[DefId(PackageId(0), LocalDefId(1))] of int
"c"@(FileId(1), 149..150) [ConstVar(Var, No)]: int
"t"@(FileId(1), 27..28) [Export]: opaque[DefId(PackageId(0), LocalDefId(1))] type to int
"a"@(FileId(1), 30..31) [Export]: opaque[DefId(PackageId(0), LocalDefId(1))] type to int
"b"@(FileId(1), 37..38) [Export]: alias[DefId(PackageId(0), LocalDefId(1))] of int
"<root>"@(dummy) [Module(No)]: <error>

