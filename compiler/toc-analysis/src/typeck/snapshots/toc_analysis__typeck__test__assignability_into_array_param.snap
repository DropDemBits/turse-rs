---
source: compiler/toc_analysis/src/typeck/test.rs
expression: "type tp: proc(_ : array 1..2 of char(*))\nvar a : array 1..2 of char\nvar b : array 1..2 of char(42)\nvar p : tp\n\n% element type is also coercible\np(a)\np(b)\n"
---
"tp"@(FileId(1), 5..7) [Type]: alias[DefId(LibraryId(0), LocalDefId(0))] of procedure ( pass(value) array ( range of `int` (Unevaluated(LibraryId(0), BodyId(0)) .. Expr(Unevaluated(LibraryId(0), BodyId(1)), No)), ) of char_n Any, ) -> void
"_"@(FileId(1), 14..15) [Param(Value, No)]: <error>
"a"@(FileId(1), 45..46) [ConstVar(Var, No)]: array ( range of `int` (Unevaluated(LibraryId(0), BodyId(2)) .. Expr(Unevaluated(LibraryId(0), BodyId(3)), Yes)), ) of char
"b"@(FileId(1), 72..73) [ConstVar(Var, No)]: array ( range of `int` (Unevaluated(LibraryId(0), BodyId(4)) .. Expr(Unevaluated(LibraryId(0), BodyId(5)), Yes)), ) of char_n Fixed(Unevaluated(LibraryId(0), BodyId(6)))
"p"@(FileId(1), 103..104) [ConstVar(Var, No)]: alias[DefId(LibraryId(0), LocalDefId(0))] of procedure ( pass(value) array ( range of `int` (Unevaluated(LibraryId(0), BodyId(0)) .. Expr(Unevaluated(LibraryId(0), BodyId(1)), No)), ) of char_n Any, ) -> void
"<unnamed>"@(dummy) [Undeclared]: <error>
"<root>"@(dummy) [Module(No)]: <error>

