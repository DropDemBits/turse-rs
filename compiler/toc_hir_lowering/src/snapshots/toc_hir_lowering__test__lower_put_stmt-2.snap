---
source: compiler/toc_hir_lowering/src/test.rs
expression: "put skip, a : 1, b : 2 : 3, c : 4 : 5 : 6"

---
database:
nodes:
HirId(Idx::<HirNode>(0)) (Span { file: None, range: 10..11 }): Expr(Name(Name(UseId(DefId(0), 0))))
HirId(Idx::<HirNode>(1)) (Span { file: None, range: 14..15 }): Expr(Literal(Integer(1)))
HirId(Idx::<HirNode>(2)) (Span { file: None, range: 17..18 }): Expr(Name(Name(UseId(DefId(1), 0))))
HirId(Idx::<HirNode>(3)) (Span { file: None, range: 21..22 }): Expr(Literal(Integer(2)))
HirId(Idx::<HirNode>(4)) (Span { file: None, range: 25..26 }): Expr(Literal(Integer(3)))
HirId(Idx::<HirNode>(5)) (Span { file: None, range: 28..29 }): Expr(Name(Name(UseId(DefId(2), 0))))
HirId(Idx::<HirNode>(6)) (Span { file: None, range: 32..33 }): Expr(Literal(Integer(4)))
HirId(Idx::<HirNode>(7)) (Span { file: None, range: 36..37 }): Expr(Literal(Integer(5)))
HirId(Idx::<HirNode>(8)) (Span { file: None, range: 40..41 }): Expr(Literal(Integer(6)))
HirId(Idx::<HirNode>(9)) (Span { file: None, range: 0..41 }): Stmt(Put(Put { stream_num: None, items: [Skip, Item(PutItem { expr: ExprId(HirId(Idx::<HirNode>(0))), opts: WithWidth { width: ExprId(HirId(Idx::<HirNode>(1))) } }), Item(PutItem { expr: ExprId(HirId(Idx::<HirNode>(2))), opts: WithPrecision { width: ExprId(HirId(Idx::<HirNode>(3))), precision: ExprId(HirId(Idx::<HirNode>(4))) } }), Item(PutItem { expr: ExprId(HirId(Idx::<HirNode>(5))), opts: WithExponentWidth { width: ExprId(HirId(Idx::<HirNode>(6))), precision: ExprId(HirId(Idx::<HirNode>(7))), exponent_width: ExprId(HirId(Idx::<HirNode>(8))) } })], append_newline: true }))
HirId(Idx::<HirNode>(10)) (Span { file: None, range: 0..41 }): Unit(Unit { id: UnitId(HirId(Idx::<HirNode>(10))), stmts: [StmtId(HirId(Idx::<HirNode>(9)))], tracked_defs: [DefId(0), DefId(1), DefId(2)], tracked_uses: [UseId(DefId(0), 0), UseId(DefId(1), 0), UseId(DefId(2), 0)] })

root stmts:
[StmtId(HirId(Idx::<HirNode>(9)))]
symtab:
DefId(0): (Span { file: None, range: 10..11 }, Symbol { name: "a", kind: Undeclared, is_pervasive: false, def_id: DefId(0), next_use: 1 })
DefId(1): (Span { file: None, range: 17..18 }, Symbol { name: "b", kind: Undeclared, is_pervasive: false, def_id: DefId(1), next_use: 1 })
DefId(2): (Span { file: None, range: 28..29 }, Symbol { name: "c", kind: Undeclared, is_pervasive: false, def_id: DefId(2), next_use: 1 })
UseId(DefId(0), 0): Span { file: None, range: 10..11 }
UseId(DefId(1), 0): Span { file: None, range: 17..18 }
UseId(DefId(2), 0): Span { file: None, range: 28..29 }

