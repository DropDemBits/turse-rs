---
source: compiler/toc_hir_lowering/tests/lowering.rs
assertion_line: 59
expression: "\n    process a : 4 + 4 end a\n    process b() : 6 + 8 end b\n    process c(k : int) : 9 + 2 end c\n    "

---
Library@(dummy)
  Root@(dummy): FileId(1) -> ItemId(3)
    Module@(FileId(1), 0..100): "<root>"@(dummy)
      StmtBody@(FileId(1), 5..95): []
        StmtItem@(FileId(1), 5..28): ItemId(0)
          Subprogram@(FileId(1), 5..28): "a"@(FileId(1), 13..14)
            ExprBody@(FileId(1), 17..22)
              Binary@(FileId(1), 17..22): Add
                Literal@(FileId(1), 17..18): Integer(4)
                Literal@(FileId(1), 21..22): Integer(4)
            Void@(FileId(1), 5..22)
            StmtBody@(FileId(1), 23..23): []
        StmtItem@(FileId(1), 33..58): ItemId(1)
          Subprogram@(FileId(1), 33..58): "b"@(FileId(1), 41..42) []
            ExprBody@(FileId(1), 47..52)
              Binary@(FileId(1), 47..52): Add
                Literal@(FileId(1), 47..48): Integer(6)
                Literal@(FileId(1), 51..52): Integer(8)
            Void@(FileId(1), 33..52)
            StmtBody@(FileId(1), 53..53): []
        StmtItem@(FileId(1), 63..95): ItemId(2)
          Subprogram@(FileId(1), 63..95): "c"@(FileId(1), 71..72) ["k"@(FileId(1), 73..74)]
            ExprBody@(FileId(1), 84..89)
              Binary@(FileId(1), 84..89): Add
                Literal@(FileId(1), 84..85): Integer(9)
                Literal@(FileId(1), 88..89): Integer(2)
            Primitive@(FileId(1), 77..80): Int
            Void@(FileId(1), 63..89)
            StmtBody@(FileId(1), 90..90): ["k"@(FileId(1), 73..74)]

