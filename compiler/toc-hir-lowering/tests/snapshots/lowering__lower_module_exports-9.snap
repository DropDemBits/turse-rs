---
source: compiler/toc-hir-lowering/tests/lowering.rs
expression: "\n    module z\n        export a, a, a, a, a\n        var a : int\n    end z"
---
Package@(dummy)
  Root@(dummy): FileId(1) -> ItemId(2)
    Module@(FileId(1), 0..72): "<root>"@(dummy)
      StmtBody@(FileId(1), 5..72): []
        StmtItem@(FileId(1), 5..72): ItemId(1)
          Module@(FileId(1), 5..72): "z"@(FileId(1), 12..13), exports [Const Qualified local("a"@(FileId(1), 55..56))]
            StmtBody@(FileId(1), 51..62): []
              StmtItem@(FileId(1), 51..62): ItemId(0)
                ConstVar@(FileId(1), 51..62): var "a"@(FileId(1), 55..56)
                  Primitive@(FileId(1), 59..62): Int
warn at (FileId(1), 32..33): export item is ignored
| warn for (FileId(1), 32..33): `a` is already exported...
| note for (FileId(1), 29..30): by this export
warn at (FileId(1), 35..36): export item is ignored
| warn for (FileId(1), 35..36): `a` is already exported...
| note for (FileId(1), 29..30): by this export
warn at (FileId(1), 38..39): export item is ignored
| warn for (FileId(1), 38..39): `a` is already exported...
| note for (FileId(1), 29..30): by this export
warn at (FileId(1), 41..42): export item is ignored
| warn for (FileId(1), 41..42): `a` is already exported...
| note for (FileId(1), 29..30): by this export

