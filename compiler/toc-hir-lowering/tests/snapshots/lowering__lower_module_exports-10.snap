---
source: compiler/toc-hir-lowering/tests/lowering.rs
expression: "\n    module z\n        export var a, var b\n        type a : int\n        const b := 8080\n    end z"
---
Package@(dummy)
  Root@(dummy): src/main.t -> ItemId(3)
    Module@(src/main.t:0..96): "<root>"@(dummy)
      StmtBody@(src/main.t:5..96): []
        StmtItem@(src/main.t:5..96): ItemId(2)
          Module@(src/main.t:5..96): "z"@(src/main.t:12..13), exports [Const Qualified local("a"@(src/main.t:55..56)), Const Qualified local("b"@(src/main.t:77..78))]
            StmtBody@(src/main.t:50..86): []
              StmtItem@(src/main.t:50..62): ItemId(0)
                Type@(src/main.t:50..62): "a"@(src/main.t:55..56)
                  Primitive@(src/main.t:59..62): Int
              StmtItem@(src/main.t:71..86): ItemId(1)
                ConstVar@(src/main.t:71..86): const "b"@(src/main.t:77..78)
                  ExprBody@(src/main.t:82..86)
                    Literal@(src/main.t:82..86): Integer(8080)
error at src/main.t:29..32: cannot use `var` here
| error for src/main.t:29..32: `var` attribute can only be applied to variables
| note for src/main.t:55..56: `a` declared here
error at src/main.t:36..39: cannot use `var` here
| error for src/main.t:36..39: `var` attribute can only be applied to variables
| note for src/main.t:77..78: `b` declared here
